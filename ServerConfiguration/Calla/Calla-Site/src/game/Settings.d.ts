import { TypedEventBase } from "kudzu/events/EventBase";
export interface IInputBinding {
    keyButtonUp: string;
    keyButtonDown: string;
    keyButtonLeft: string;
    keyButtonRight: string;
    keyButtonEmote: string;
    keyButtonToggleAudio: string;
    keyButtonZoomOut: string;
    keyButtonZoomIn: string;
    gpAxisLeftRight: number;
    gpAxisUpDown: number;
    gpButtonEmote: number;
    gpButtonToggleAudio: number;
    gpButtonZoomIn: number;
    gpButtonZoomOut: number;
    gpButtonUp: number;
    gpButtonDown: number;
    gpButtonLeft: number;
    gpButtonRight: number;
}
export declare class InputBindingChangedEvent extends Event {
    constructor();
}
interface InputBindingEvents {
    inputBindingChanged: InputBindingChangedEvent;
}
export declare class InputBinding extends TypedEventBase<InputBindingEvents> implements IInputBinding {
    private bindings;
    constructor();
    get(key: string): string | number;
    set(key: string, value: string | number): void;
    get keyButtonUp(): string;
    set keyButtonUp(v: string);
    get keyButtonDown(): string;
    set keyButtonDown(v: string);
    get keyButtonLeft(): string;
    set keyButtonLeft(v: string);
    get keyButtonRight(): string;
    set keyButtonRight(v: string);
    get keyButtonEmote(): string;
    set keyButtonEmote(v: string);
    get keyButtonToggleAudio(): string;
    set keyButtonToggleAudio(v: string);
    get keyButtonZoomOut(): string;
    set keyButtonZoomOut(v: string);
    get keyButtonZoomIn(): string;
    set keyButtonZoomIn(v: string);
    get gpAxisLeftRight(): number;
    set gpAxisLeftRight(v: number);
    get gpAxisUpDown(): number;
    set gpAxisUpDown(v: number);
    get gpButtonEmote(): number;
    set gpButtonEmote(v: number);
    get gpButtonToggleAudio(): number;
    set gpButtonToggleAudio(v: number);
    get gpButtonZoomIn(): number;
    set gpButtonZoomIn(v: number);
    get gpButtonZoomOut(): number;
    set gpButtonZoomOut(v: number);
    get gpButtonUp(): number;
    set gpButtonUp(v: number);
    get gpButtonDown(): number;
    set gpButtonDown(v: number);
    get gpButtonLeft(): number;
    set gpButtonLeft(v: number);
    get gpButtonRight(): number;
    set gpButtonRight(v: number);
    private checkedSet;
    toJSON(): IInputBinding;
    copy(obj: IInputBinding): void;
    fix(obj: IInputBinding): void;
}
export declare class Settings {
    private _drawHearing;
    private _audioDistanceMin;
    private _audioDistanceMax;
    private _audioRolloff;
    private _fontSize;
    private _transitionSpeed;
    private _zoom;
    private _roomName;
    private _userName;
    private _email;
    private _avatarEmoji;
    private _avatarURL;
    private _gamepadIndex;
    private _inputBinding;
    private _preferredAudioOutputID;
    private _preferredAudioInputID;
    private _preferredVideoInputID;
    constructor();
    private commit;
    get preferredAudioOutputID(): string;
    set preferredAudioOutputID(value: string);
    get preferredAudioInputID(): string;
    set preferredAudioInputID(value: string);
    get preferredVideoInputID(): string;
    set preferredVideoInputID(value: string);
    get transitionSpeed(): number;
    set transitionSpeed(value: number);
    get drawHearing(): boolean;
    set drawHearing(value: boolean);
    get audioDistanceMin(): number;
    set audioDistanceMin(value: number);
    get audioDistanceMax(): number;
    set audioDistanceMax(value: number);
    get audioRolloff(): number;
    set audioRolloff(value: number);
    get fontSize(): number;
    set fontSize(value: number);
    get zoom(): number;
    set zoom(value: number);
    get userName(): string;
    set userName(value: string);
    get email(): string;
    set email(value: string);
    get avatarEmoji(): string;
    set avatarEmoji(value: string);
    get avatarURL(): string;
    set avatarURL(value: string);
    get roomName(): string;
    set roomName(value: string);
    get gamepadIndex(): number;
    set gamepadIndex(value: number);
    get inputBinding(): IInputBinding;
    set inputBinding(value: IInputBinding);
}
export {};
